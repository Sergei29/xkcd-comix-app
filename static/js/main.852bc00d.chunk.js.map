{"version":3,"sources":["serviceWorker.js","redux/actions.types.js","redux/reducer.js","redux/store.js","containers/App/App.styles.jsx","components/Navigation/Navigation.styles.jsx","components/SearchBar/SearchBar.styles.jsx","components/SearchBar/SearchBar.component.jsx","components/Navigation/Navigation.component.jsx","components/Title/Title.styles.jsx","components/Title/Title.component.jsx","containers/Header/Header.styles.jsx","containers/Header/Header.component.jsx","containers/Footer/Footer.styles.jsx","containers/Footer/Footer.component.jsx","redux/actions.js","components/Comics/ComicsView.styles.jsx","components/Comics/ComicsView.component.jsx","containers/RecentComicsPage/RecentComicsPage.component.jsx","containers/ComicsPage/ComicsPage.component.jsx","containers/App/App.component.jsx","index.js"],"names":["Boolean","window","location","hostname","match","actionsTypes","FETCH_START","FETCH_RECENT_SUCCESS","FETCH_ERROR","FETCH_BY_ID_SUCCESS","INITIAL_STATE","loading","error","recentComics","comicsList","reducer","state","action","type","payload","composeEnhancers","compose","middleware","thunk","store","createStore","applyMiddleware","AppContainer","styled","div","MainContainer","main","NavigationContainer","Navbar","nav","StyledLink","NavLink","StyledForm","form","StyledInput","input","SubmitButton","button","withRouter","history","useState","id","setId","onSubmit","event","preventDefault","push","value","onChange","newId","parseInt","target","isNaN","placeholder","Navigation","to","TitleContainer","Heading","h1","Logo","href","src","alt","height","width","Title","HeaderContainer","header","Header","FooterContainer","footer","Footer","fetchComicsStart","fetchComicsError","ImageFrame","a","Image","img","Comics","title","num","connect","dispatch","fetchRecent","url","axios","get","data","status","useRef","willUnmount","useEffect","current","Object","keys","length","fetchComicsById","comicsUrl","comics","params","currentComics","setCurrentComics","App","path","exact","component","RecentComicsPage","ComicsPage","render","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.852bc00d.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const actionsTypes = {\n\tFETCH_START: \"FETCH_START\",\n\tFETCH_RECENT_SUCCESS: \"FETCH_RECENT_SUCCESS\",\n\tFETCH_ERROR: \"FETCH_ERROR\",\n\tFETCH_BY_ID_SUCCESS: \"FETCH_BY_ID_SUCCESS\",\n};\n\nexport default actionsTypes;\n","import actionsTypes from \"./actions.types\";\n\nconst INITIAL_STATE = {\n\tloading: false,\n\terror: null,\n\trecentComics: {},\n\tcomicsList: {},\n};\n\nconst reducer = (state = INITIAL_STATE, action) => {\n\tswitch (action.type) {\n\t\tcase actionsTypes.FETCH_START:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloading: true,\n\t\t\t};\n\t\tcase actionsTypes.FETCH_RECENT_SUCCESS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloading: false,\n\t\t\t\terror: null,\n\t\t\t\trecentComics: action.payload,\n\t\t\t};\n\t\tcase actionsTypes.FETCH_BY_ID_SUCCESS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloading: false,\n\t\t\t\terror: null,\n\t\t\t\tcomicsList: { ...state.comicsList, ...action.payload },\n\t\t\t};\n\t\tcase actionsTypes.FETCH_ERROR:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloading: false,\n\t\t\t\terror: action.payload,\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default reducer;\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport reducer from \"./reducer\";\n\nconst composeEnhancers =\n\tprocess.env.NODE_ENV === \"development\"\n\t\t? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n\t\t: null || compose;\n\nconst middleware = [thunk];\n\nconst store = createStore(\n\treducer,\n\tcomposeEnhancers(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import styled from \"styled-components\";\n\nexport const AppContainer = styled.div`\n\ttext-align: center;\n\twidth: 60%;\n\tmargin: 0 auto;\n\t@media screen and (max-width: 750px) {\n\t\twidth: 90%;\n\t}\n\t@media screen and (max-width: 1200px) {\n\t\twidth: 70%;\n\t}\n`;\n\nexport const MainContainer = styled.main`\n\tbackground-color: #fff;\n\tborder-radius: 10px;\n\tdisplay: flex;\n\tflex-direction: column;\n\tborder: 1.5px solid #071419;\n\tmargin-bottom: 6px;\n`;\n","import styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const NavigationContainer = styled.div`\n\tbackground-color: #fff;\n\tborder-radius: 10px;\n\tflex-grow: 1;\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\tmargin-right: 2px;\n\tborder: 1.5px solid #071419;\n\t@media screen and (max-width: 750px) {\n\t\torder: 2;\n\t\tmargin-top: 6px;\n\t\tmargin-right: 0;\n\t}\n`;\n\nexport const Navbar = styled.nav`\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\twidth: 80%;\n\tmargin: 0 auto;\n`;\n\nexport const StyledLink = styled(NavLink)`\n\tdisplay: block;\n\twidth: 100%;\n\tbox-sizing: border-box;\n\tborder-radius: 6px;\n\ttext-decoration: none;\n\tmargin: 3px 0;\n\tpadding: 3px 6px;\n\tborder: 1.5px solid #071419;\n\tbackground-color: #96a8c8;\n\tfont-weight: bold;\n\tcolor: #fff;\n`;\n","import styled from \"styled-components\";\n\nexport const StyledForm = styled.form`\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: space-between;\n\talign-items: center;\n\tmargin: 3px 0;\n\twidth: 80%;\n\tmargin: 0 auto;\n`;\n\nexport const StyledInput = styled.input`\n\tdisplay: inline-block;\n\tborder: 1.5px solid #071419;\n\tborder-radius: 6px;\n\tpadding: 2px 4px;\n\tmargin: 2px 0;\n\twidth: 100%;\n\tbox-sizing: border-box;\n`;\n\nexport const SubmitButton = styled.button`\n\tdisplay: inline-block;\n\tborder: 1.5px solid #071419;\n\tborder-radius: 6px;\n\tpadding: 2px 4px;\n\tmargin: 2px 0;\n\tcolor: #fff;\n\tbackground-color: #96a8c8;\n\twidth: 100%;\n`;\n","import React, { useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { StyledForm, StyledInput, SubmitButton } from \"./SearchBar.styles\";\n\nconst SearchBar = ({ history }) => {\n\tconst [id, setId] = useState(\"\");\n\n\tconst changeHandler = (event) => {\n\t\tlet newId = parseInt(event.target.value, 10);\n\t\tif (isNaN(newId)) newId = \"\";\n\n\t\tsetId(newId);\n\t};\n\n\tconst submitHandler = (event) => {\n\t\tevent.preventDefault();\n\t\tif (id === \"\") return;\n\t\thistory.push(`/${id}`);\n\t\tsetId(\"\");\n\t};\n\n\treturn (\n\t\t<StyledForm onSubmit={submitHandler}>\n\t\t\t<StyledInput\n\t\t\t\ttype=\"text\"\n\t\t\t\tvalue={id}\n\t\t\t\tonChange={changeHandler}\n\t\t\t\tplaceholder=\"numeric value\"\n\t\t\t/>\n\t\t\t<SubmitButton type=\"submit\">get comics</SubmitButton>\n\t\t</StyledForm>\n\t);\n};\n\nexport default withRouter(SearchBar);\n","import React from \"react\";\nimport { NavigationContainer, StyledLink, Navbar } from \"./Navigation.styles\";\nimport SearchBar from \"../SearchBar/SearchBar.component\";\n\nconst Navigation = () => (\n\t<NavigationContainer>\n\t\t<Navbar>\n\t\t\t<StyledLink to=\"/\">Recent</StyledLink>\n\t\t</Navbar>\n\t\t<SearchBar />\n\t</NavigationContainer>\n);\n\nexport default Navigation;\n","import styled from \"styled-components\";\n\nexport const TitleContainer = styled.div`\n\tbackground-color: #fff;\n\tborder-radius: 10px;\n\tflex-grow: 2;\n\tdisplay: flex;\n\tflex-direction: column;\n\tmargin-left: 2px;\n\tborder: 1.5px solid #071419;\n\t@media screen and (max-width: 750px) {\n\t\tmargin-left: 0;\n\t}\n`;\n\nexport const Heading = styled.h1`\n\tfont-size: 18px;\n`;\n","import React from \"react\";\nimport { TitleContainer, Heading } from \"./Title.styles\";\n\nconst Logo = (\n\t<a href=\"https://xkcd.com\">\n\t\t<img\n\t\t\tsrc=\"https://xkcd.com/s/0b7742.png\"\n\t\t\talt=\"xkcd.com logo\"\n\t\t\theight=\"83\"\n\t\t\twidth=\"185\"\n\t\t></img>\n\t</a>\n);\n\nconst Title = () => (\n\t<TitleContainer>\n\t\t{Logo}\n\t\t<Heading>A webcomic of romance, sarcasm, math, and language.</Heading>\n\t</TitleContainer>\n);\n\nexport default Title;\n","import styled from \"styled-components\";\n\nexport const HeaderContainer = styled.header`\n\tdisplay: flex;\n\tjustify-content: space-between;\n\tmargin-bottom: 6px;\n\t@media screen and (max-width: 750px) {\n\t\tflex-direction: column;\n\t}\n`;\n","import React from \"react\";\nimport Navigation from \"../../components/Navigation/Navigation.component\";\nimport Title from \"../../components/Title/Title.component\";\nimport { HeaderContainer } from \"./Header.styles\";\n\nconst Header = () => {\n\treturn (\n\t\t<HeaderContainer>\n\t\t\t<Navigation />\n\t\t\t<Title />\n\t\t</HeaderContainer>\n\t);\n};\n\nexport default Header;\n","import styled from \"styled-components\";\n\nexport const FooterContainer = styled.footer`\n\tbackground-color: #fff;\n\tborder-radius: 10px;\n\tdisplay: flex;\n\tflex-direction: column;\n\tborder: 1.5px solid #071419;\n`;\n","import React from \"react\";\nimport { FooterContainer } from \"./Footer.styles\";\n\nconst Footer = () => (\n\t<FooterContainer>\n\t\t<h3>footer</h3>\n\t\t<p>\n\t\t\t<small>\n\t\t\t\tThis app is created for non-commercial purpose as training\n\t\t\t\tproject, the styles and logo used from{\" \"}\n\t\t\t\t<a href=\"https://xkcd.com/\">https://xkcd.com/</a>\n\t\t\t</small>\n\t\t</p>\n\t</FooterContainer>\n);\n\nexport default Footer;\n","import axios from \"axios\";\nimport actionsTypes from \"./actions.types\";\n//GET_CORS_PROXY: CORS Anywhere - see README.md\nconst GET_CORS_PROXY = \"http://cors-anywhere.herokuapp.com/\";\n\nexport const fetchComicsStart = () => ({\n\ttype: actionsTypes.FETCH_START,\n});\n\nexport const fetchRecentSuccess = (recentComics) => ({\n\ttype: actionsTypes.FETCH_RECENT_SUCCESS,\n\tpayload: recentComics,\n});\n\nexport const fetchComicsByIdSuccess = (comicsById) => ({\n\ttype: actionsTypes.FETCH_BY_ID_SUCCESS,\n\tpayload: comicsById,\n});\n\nexport const fetchComicsError = (error) => ({\n\ttype: actionsTypes.FETCH_ERROR,\n\tpayload: error,\n});\n\nexport const fetchRecent = () => async (dispatch) => {\n\tdispatch(fetchComicsStart());\n\tconst comicsUrl = \"http://xkcd.com/info.0.json\";\n\tconst url = `${GET_CORS_PROXY}${comicsUrl}`;\n\n\ttry {\n\t\tconst { data } = await axios.get(url);\n\t\tdispatch(fetchRecentSuccess(data));\n\t} catch (error) {\n\t\tdispatch(fetchComicsError(error));\n\t}\n};\n\nexport const fetchComicsById = (id, comicsList) => async (dispatch) => {\n\tif (comicsList[id]) return;\n\tdispatch(fetchComicsStart());\n\n\tconst comicsUrl = `http://xkcd.com/${id}/info.0.json`;\n\tconst url = `${GET_CORS_PROXY}${comicsUrl}`;\n\n\ttry {\n\t\tconst { data } = await axios.get(url);\n\t\tconst comics = { [data.num]: data };\n\t\tdispatch(fetchComicsByIdSuccess(comics));\n\t} catch (error) {\n\t\tdispatch(fetchComicsError(error));\n\t}\n};\n","import styled from \"styled-components\";\n\nexport const ImageFrame = styled.a`\n\twidth: 95%;\n\tdisplay: block;\n\tmargin: 6px auto;\n`;\n\nexport const Image = styled.img`\n\twidth: 100%;\n\tdisplay: block;\n`;\n","import React from \"react\";\nimport { ImageFrame, Image } from \"./ComicsView.styles\";\n\nconst Comics = ({ title, num, img, alt }) => {\n\treturn (\n\t\t<div>\n\t\t\t<h2>{title}</h2>\n\t\t\t<div>\n\t\t\t\t<ImageFrame href={`https://xkcd.com/${num}`}>\n\t\t\t\t\t<Image src={img} alt={alt} title={alt} />\n\t\t\t\t</ImageFrame>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Comics;\n","import React, { useEffect, useRef } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchRecent } from \"../../redux/actions\";\nimport ComicsView from \"../../components/Comics/ComicsView.component\";\n\nconst RecentComicsPage = ({ loading, recentComics, fetchRecent }) => {\n\tconst status = useRef({ willUnmount: false });\n\tconst { title, img, num, alt } = recentComics;\n\n\tuseEffect(() => {\n\t\tif (\n\t\t\t!status.current.willUnmount &&\n\t\t\tObject.keys(recentComics).length === 0\n\t\t) {\n\t\t\tfetchRecent();\n\t\t}\n\t}, [fetchRecent, recentComics]);\n\n\tuseEffect(() => {\n\t\treturn () => {\n\t\t\t// cleanup for all api calls before unmount:\n\t\t\tstatus.current.willUnmount = true;\n\t\t};\n\t}, []);\n\n\treturn (\n\t\t<>\n\t\t\t<h2>Recent comics page</h2>\n\t\t\t{loading ? (\n\t\t\t\t<p>Loading...</p>\n\t\t\t) : (\n\t\t\t\t<ComicsView title={title} img={img} num={num} alt={alt} />\n\t\t\t)}\n\t\t</>\n\t);\n};\n\nconst mapStateToProps = (state) => ({\n\trecentComics: state.recentComics,\n\tloading: state.loading,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n\tfetchRecent: () => dispatch(fetchRecent()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RecentComicsPage);\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchComicsById } from \"../../redux/actions\";\nimport ComicsView from \"../../components/Comics/ComicsView.component\";\n\nconst ComicsPage = ({ match, comicsList, fetchComicsById }) => {\n\tconst { id } = match.params;\n\tconst status = useRef({ willUnmount: false });\n\tconst [currentComics, setCurrentComics] = useState({});\n\tconst { title, img, num, alt } = currentComics;\n\n\tuseEffect(() => {\n\t\tif (!status.current.willUnmount) {\n\t\t\tfetchComicsById(id, comicsList);\n\t\t}\n\t\tif (comicsList[id]) {\n\t\t\tsetCurrentComics(comicsList[id]);\n\t\t}\n\t}, [id, comicsList, fetchComicsById]);\n\n\tuseEffect(() => {\n\t\treturn () => {\n\t\t\t// cleanup for all api calls before unmount:\n\t\t\tstatus.current.willUnmount = true;\n\t\t};\n\t}, []);\n\treturn (\n\t\t<>\n\t\t\t<h1>Comics page {match.params.id}</h1>\n\t\t\t{currentComics[id] ? (\n\t\t\t\t<p>Loading...</p>\n\t\t\t) : (\n\t\t\t\t<ComicsView title={title} img={img} num={num} alt={alt} />\n\t\t\t)}\n\t\t</>\n\t);\n};\n\nconst mapStateToProps = (state) => ({\n\tcomicsList: state.comicsList,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n\tfetchComicsById: (id, comicsList) =>\n\t\tdispatch(fetchComicsById(id, comicsList)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ComicsPage);\n","import React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport { AppContainer, MainContainer } from \"./App.styles\";\n\n// components:\nimport Header from \"../Header/Header.component\";\nimport Footer from \"../Footer/Footer.component\";\nimport RecentComicsPage from \"../RecentComicsPage/RecentComicsPage.component\";\nimport ComicsPage from \"../ComicsPage/ComicsPage.component\";\n\nfunction App() {\n\treturn (\n\t\t<AppContainer>\n\t\t\t<BrowserRouter>\n\t\t\t\t<Header />\n\t\t\t\t<MainContainer>\n\t\t\t\t\t{/* Routing must go here for 2 pages + 404 */}\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route path=\"/\" exact component={RecentComicsPage} />\n\t\t\t\t\t\t<Route path=\"/:id\" exact component={ComicsPage} />\n\t\t\t\t\t\t<Route render={() => <h1>Page not found</h1>} />\n\t\t\t\t\t</Switch>\n\t\t\t\t</MainContainer>\n\t\t\t\t<Footer />\n\t\t\t</BrowserRouter>\n\t\t</AppContainer>\n\t);\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport store from \"./redux/store\";\nimport App from \"./containers/App/App.component\";\nimport \"./index.css\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t<App />\n\t\t</Provider>\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}